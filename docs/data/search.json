{"list":[{"title":"ConnectionState","link":"<a href=\"ConnectionState.html\">ConnectionState</a>","description":"<p>Interface representing the connection state.</p>"},{"title":"ErrorHandlerFunction","link":"<a href=\"global.html#ErrorHandlerFunction\">ErrorHandlerFunction</a>","description":"<p>Type representing an error handler function.</p>"},{"title":"HandlerFunction","link":"<a href=\"global.html#HandlerFunction\">HandlerFunction</a>","description":"<p>Type representing a handler function.</p>"},{"title":"MessageSigningFunction","link":"<a href=\"global.html#MessageSigningFunction\">MessageSigningFunction</a>","description":"<p>Type representing a message signing function.</p>"},{"title":"ProjectionFunction","link":"<a href=\"global.html#ProjectionFunction\">ProjectionFunction</a>","description":"<p>Type representing a projection function.</p>"},{"title":"TransactionSigningFunction","link":"<a href=\"global.html#TransactionSigningFunction\">TransactionSigningFunction</a>","description":"<p>Type representing a transaction signing function.</p>"},{"title":"TransactionsSigningFunction","link":"<a href=\"global.html#TransactionsSigningFunction\">TransactionsSigningFunction</a>","description":"<p>Type representing a transactions signing function.</p>"},{"title":"Wallet","link":"<a href=\"Wallet.html\">Wallet</a>","description":"<p>An interface for the wallet object.</p>"},{"title":"WalletConfig","link":"<a href=\"WalletConfig.html\">WalletConfig</a>","description":"<p>An interface for the wallet configuration object.</p>"},{"title":"WalletNotSelectedError","link":"<a href=\"WalletNotSelectedError.html\">WalletNotSelectedError</a>"},{"title":"WalletState","link":"<a href=\"WalletState.html\">WalletState</a>","description":"<p>An interface for the information stored in the WalletState object.</p>"},{"title":"global.WalletConfig","link":"<a href=\"global.html#.WalletConfig\">WalletConfig</a>"},{"title":"global.module:ConnectionConfig","link":"<a href=\"global.module_ConnectionConfig.html\">ConnectionConfig</a>"},{"title":"global.module:ConnectionConfig.CONNECTION_CONFIG","link":"<a href=\"global.module_ConnectionConfig.html#.CONNECTION_CONFIG\">CONNECTION_CONFIG</a>","description":"<p>Injection token for connection configuration.</p>"},{"title":"global.module:ConnectionConfig.connectionConfigProviderFactory","link":"<a href=\"global.module_ConnectionConfig.html#.connectionConfigProviderFactory\">connectionConfigProviderFactory</a>","description":"<p>Provider factory for connection configuration.</p>"},{"title":"global.module:ConnectionConfig~ConnectionStore","link":"<a href=\"global.module_ConnectionConfig-ConnectionStore.html\">ConnectionStore</a>","description":"<p>Creates an instance of ConnectionStore.</p>"},{"title":"global.module:ConnectionConfig~ConnectionStore#connection$","link":"<a href=\"global.module_ConnectionConfig-ConnectionStore.html#connection$\">connection$</a>","description":"<p>Connection observable.</p>"},{"title":"global.module:ConnectionConfig~ConnectionStore#onEndpointChange","link":"<a href=\"global.module_ConnectionConfig-ConnectionStore.html#onEndpointChange\">onEndpointChange</a>","description":"<p>Effect for handling endpoint changes.</p>"},{"title":"global.module:ConnectionConfig~ConnectionStore#setEndpoint","link":"<a href=\"global.module_ConnectionConfig-ConnectionStore.html#setEndpoint\">setEndpoint</a>","description":"<p>Sets the endpoint.</p>"},{"title":"global.module:HandleEvent","link":"<a href=\"global.module_HandleEvent.html\">HandleEvent</a>"},{"title":"global.module:HandleEvent.handleEvent","link":"<a href=\"global.module_HandleEvent.html#.handleEvent\">handleEvent</a>","description":"<p>Handles events by projecting non-null values using the provided function.</p>"},{"title":"global.module:IsNotNullOrUndefined","link":"<a href=\"global.module_IsNotNullOrUndefined.html\">IsNotNullOrUndefined</a>"},{"title":"global.module:IsNotNullOrUndefined.isNotNullOrUndefined","link":"<a href=\"global.module_IsNotNullOrUndefined.html#.isNotNullOrUndefined\">isNotNullOrUndefined</a>","description":"<p>Filters out null and undefined values from the source observable.</p>"},{"title":"global.module:LocalStorageSubject","link":"<a href=\"global.module_LocalStorageSubject.html\">LocalStorageSubject</a>"},{"title":"global.module:LocalStorageSubject.LocalStorageSubject","link":"<a href=\"global.module_LocalStorageSubject.LocalStorageSubject.html\">LocalStorageSubject</a>"},{"title":"global.module:LocalStorageSubject.LocalStorageSubject#next","link":"<a href=\"global.module_LocalStorageSubject.LocalStorageSubject.html#next\">next</a>","description":"<p>Sets the next value and updates local storage.</p>"},{"title":"global.module:LocalStorageSubject.LocalStorageSubject#next","link":"<a href=\"global.module_LocalStorageSubject.LocalStorageSubject.html#next\">next</a>","description":"<p>Sets the next value and updates local storage.</p>"},{"title":"global.module:LocalStorageSubject~getInitialValue","link":"<a href=\"global.module_LocalStorageSubject.html#~getInitialValue\">getInitialValue</a>","description":"<p>Gets the initial value for the given key from local storage.</p>"},{"title":"global.module:Sign","link":"<a href=\"global.module_Sign.html\">Sign</a>"},{"title":"global.module:Sign.signAllTransactions","link":"<a href=\"global.module_Sign.html#.signAllTransactions\">signAllTransactions</a>","description":"<p>Signs all transactions using the provided adapter.</p>"},{"title":"global.module:Sign.signMessage","link":"<a href=\"global.module_Sign.html#.signMessage\">signMessage</a>","description":"<p>Signs a message using the provided adapter.</p>"},{"title":"global.module:Sign.signTransaction","link":"<a href=\"global.module_Sign.html#.signTransaction\">signTransaction</a>","description":"<p>Signs a transaction using the provided adapter.</p>"},{"title":"global.module:WalletAdapterEvents","link":"<a href=\"global.module_WalletAdapterEvents.html\">WalletAdapterEvents</a>"},{"title":"global.module:WalletAdapterEvents.fromAdapterEvent","link":"<a href=\"global.module_WalletAdapterEvents.html#.fromAdapterEvent\">fromAdapterEvent</a>","description":"<p>Creates an observable from a wallet adapter event.</p>"},{"title":"global.module:WalletConfig","link":"<a href=\"global.module_WalletConfig.html\">WalletConfig</a>"},{"title":"global.module:WalletConfig","link":"<a href=\"global.module_WalletConfig.html\">WalletConfig</a>"},{"title":"global.module:WalletConfig.WALLET_CONFIG","link":"<a href=\"global.module_WalletConfig.html#.WALLET_CONFIG\">WALLET_CONFIG</a>","description":"<p>This token is used to provide the wallet configuration to the dependency injection system.</p>"},{"title":"global.module:WalletConfig.provideWalletAdapter","link":"<a href=\"global.module_WalletConfig.html#.provideWalletAdapter\">provideWalletAdapter</a>","description":"<p>Provides a wallet adapter.</p>"},{"title":"global.module:WalletConfig.walletConfigProviderFactory","link":"<a href=\"global.module_WalletConfig.html#.walletConfigProviderFactory\">walletConfigProviderFactory</a>","description":"<p>This function takes a partial configuration object for the wallet and returns a provider object for the wallet configuration. The provider object has a provide property set to WALLET_CONFIG and a useValue property set to the merged default and provided configuration values.</p>"},{"title":"global.module:WalletConfig~WalletStore","link":"<a href=\"global.module_WalletConfig-WalletStore.html\">WalletStore</a>","description":"<p>Creates a new WalletStore object.</p>"},{"title":"global.module:WalletConfig~WalletStore#anchorWallet$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#anchorWallet$\">anchorWallet$</a>","description":"<p>handles the wallet's signTransaction and signAllTransactions methods if supported by the adapter</p>"},{"title":"global.module:WalletConfig~WalletStore#autoConnect$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#autoConnect$\">autoConnect$</a>","description":"<p>notify subscribers the value of the autoConnect optional property of the wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#connect","link":"<a href=\"global.module_WalletConfig-WalletStore.html#connect\">connect</a>","description":"<p>Connects the adapter to the wallet by checking if it is not already connected, connecting, or disconnecting. If there is no adapter selected, it throws a WalletNotSelectedError. If the readyState of the wallet is not Installed or Loadable, it throws a WalletNotReadyError. Otherwise, it connects to the adapter and updates the state accordingly.</p>"},{"title":"global.module:WalletConfig~WalletStore#connected$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#connected$\">connected$</a>","description":"<p>notify subscribers the value of the connected property of the selected wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#connecting$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#connecting$\">connecting$</a>","description":"<p>notify subscribers the value of the connecting property of the selected wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#disconnect","link":"<a href=\"global.module_WalletConfig-WalletStore.html#disconnect\">disconnect</a>","description":"<p>Disconnects the adapter from the wallet by checking if it is not already disconnecting. If there is no adapter selected, it selects null as the wallet. Otherwise, it disconnects from the adapter and updates the state accordingly.</p>"},{"title":"global.module:WalletConfig~WalletStore#disconnecting$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#disconnecting$\">disconnecting$</a>","description":"<p>notify subscribers the value of the disconnecting property of the selected wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#error$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#error$\">error$</a>","description":"<p>notify subscribers the value of the error property of the selected wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#onAdapterChangeDisconnectPreviousAdapter","link":"<a href=\"global.module_WalletConfig-WalletStore.html#onAdapterChangeDisconnectPreviousAdapter\">onAdapterChangeDisconnectPreviousAdapter</a>","description":"<p>When the adapter change, disconnects the previous adapter, updates the readyState for newly selected adapter and informs the subscribers the new status of the wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#onAutoConnect","link":"<a href=\"global.module_WalletConfig-WalletStore.html#onAutoConnect\">onAutoConnect</a>","description":"<p>If autoConnect is enabled, tries to connect the wallet when any change occurs, such as window reload.</p>"},{"title":"global.module:WalletConfig~WalletStore#onConnect","link":"<a href=\"global.module_WalletConfig-WalletStore.html#onConnect\">onConnect</a>","description":"<p>When the wallet connects, updates the state and informs the subscribers the new status of the wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#onDisconnect","link":"<a href=\"global.module_WalletConfig-WalletStore.html#onDisconnect\">onDisconnect</a>","description":"<p>When the wallet disconnects, remove the previos wallet data, updates the state and informs the subscribers the new status of the wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#onError","link":"<a href=\"global.module_WalletConfig-WalletStore.html#onError\">onError</a>","description":"<p>When an error occurs, updates the state and informs the subscribers the new status of the wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#onReadyStateChanges","link":"<a href=\"global.module_WalletConfig-WalletStore.html#onReadyStateChanges\">onReadyStateChanges</a>","description":"<p>When the readyState of an adapter change, updates all the adapters readyState properties and informs the subscribers of the new state.</p>"},{"title":"global.module:WalletConfig~WalletStore#onWalletChanged","link":"<a href=\"global.module_WalletConfig-WalletStore.html#onWalletChanged\">onWalletChanged</a>","description":"<p>When the wallet changes, initialize the wallet state for newly selected wallet and informs the subscribers the new status of the wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#onWindowUnload","link":"<a href=\"global.module_WalletConfig-WalletStore.html#onWindowUnload\">onWindowUnload</a>","description":"<p>If the window is closing or reloading, ignore the adapter's disconnect and error events.</p>"},{"title":"global.module:WalletConfig~WalletStore#publicKey$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#publicKey$\">publicKey$</a>","description":"<p>notify subscribers the value of the public key of the selected wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#selectWallet","link":"<a href=\"global.module_WalletConfig-WalletStore.html#selectWallet\">selectWallet</a>","description":"<p>This method is used to update the selected wallet with the specified wallet name.</p>"},{"title":"global.module:WalletConfig~WalletStore#sendTransaction","link":"<a href=\"global.module_WalletConfig-WalletStore.html#sendTransaction\">sendTransaction</a>","description":"<p>Sends a transaction using the provided connection by checking if there is an adapter selected and if it is connected. If there is no adapter selected, it throws a WalletNotSelectedError. If there is no wallet connected, it throws a WalletNotConnectedError. Otherwise, it sends the transaction using the adapter.</p>"},{"title":"global.module:WalletConfig~WalletStore#setAdapters","link":"<a href=\"global.module_WalletConfig-WalletStore.html#setAdapters\">setAdapters</a>","description":"<p>When the available adapters change, updates the state and informs the subscribers the new status of the wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#signAllTransactions","link":"<a href=\"global.module_WalletConfig-WalletStore.html#signAllTransactions\">signAllTransactions</a>","description":"<p>Sign multiple transactions if the wallet supports it by checking if there is an adapter selected and if it has the signAllTransactions method. If it does, it signs all the transactions using the adapter. Otherwise, it returns undefined.</p>"},{"title":"global.module:WalletConfig~WalletStore#signMessage","link":"<a href=\"global.module_WalletConfig-WalletStore.html#signMessage\">signMessage</a>","description":"<p>Sign an arbitrary message if the wallet supports it by checking if there is an adapter selected and if it has the signMessage method. If it does, it signs the message using the adapter. Otherwise, it returns undefined.</p>"},{"title":"global.module:WalletConfig~WalletStore#signTransaction","link":"<a href=\"global.module_WalletConfig-WalletStore.html#signTransaction\">signTransaction</a>","description":"<p>Sign a transaction if the wallet supports it by checking if there is an adapter selected and if it has the signTransaction method. If it does, it signs the transaction using the adapter. Otherwise, it returns undefined.</p>"},{"title":"global.module:WalletConfig~WalletStore#wallet$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#wallet$\">wallet$</a>","description":"<p>notifiy subscribers the value of the selected wallet.</p>"},{"title":"global.module:WalletConfig~WalletStore#wallets$","link":"<a href=\"global.module_WalletConfig-WalletStore.html#wallets$\">wallets$</a>","description":"<p>notify the subscribers the value of the available list of wallets</p>"},{"title":"global.module:WalletConfig~initialState","link":"<a href=\"global.module_WalletConfig.html#~initialState\">initialState</a>","description":"<p>Initial state of the WalletStore object.</p>"},{"title":"module.exports","link":"<a href=\"module.html#.exports\">exports</a>"},{"title":"module:HdWalletAdapterModule","link":"<a href=\"module-HdWalletAdapterModule.html\">HdWalletAdapterModule</a>","description":"<p>Module to provide an HD wallet adapter.</p>"}]}